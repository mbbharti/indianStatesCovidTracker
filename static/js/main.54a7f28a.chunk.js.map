{"version":3,"sources":["logo.svg","Components/Navbar.jsx","Components/FetchData.jsx","Components/CovidData.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","FetchData","props","style","width","lastUpdate","state","confirmed","active","recovered","deaths","CovidData","useState","data","setData","useEffect","a","fetch","response","json","responsejson","statewise","console","log","callApi","scope","map","value","index","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4MAAe,I,YCgBAA,EAdA,WACX,OACI,qCACI,qBAAKC,UAAU,6BAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAMA,UAAU,2BAAhB,oCAGR,oBAAIA,UAAU,mBAAd,oC,8BCUGC,EAlBG,SAACC,GACf,OACI,mCACI,gCACI,+BACI,oBAAIC,MAAO,CAACC,MAAM,SAAlB,SAA6BF,EAAMG,aACnC,6BAAKH,EAAMI,QACX,6BAAKJ,EAAMK,YACX,6BAAKL,EAAMM,SACX,6BAAKN,EAAMO,YACX,6BAAKP,EAAMQ,iBCqChBC,EA9CG,WACd,MAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KAYA,OAVAC,qBAAU,YACO,uCAAE,8BAAAC,EAAA,sEACYC,MAAM,0CADlB,cACLC,EADK,gBAEgBA,EAASC,OAFzB,OAELC,EAFK,OAGXN,EAAQM,EAAaC,WACrBC,QAAQC,IAAIH,EAAaC,WAJd,2CAAF,qDAMbG,KACF,IAGE,mCACI,qBAAKxB,UAAU,YAAf,SACI,wBAAOA,UAAU,sBAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,oBAAIyB,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,4BACA,oBAAIA,MAAM,MAAV,yBAIJZ,EAAKa,KAAI,SAACC,EAAMC,GACb,OAAO,cAAC,EAAD,CAEFpB,OAAQmB,EAAMnB,OACdD,UAAWoB,EAAMpB,UACjBG,OAAQiB,EAAMjB,OACdL,WAAYsB,EAAME,gBAClBpB,UAAWkB,EAAMlB,UACjBH,MAAOqB,EAAMrB,OANRsB,cCnBtBE,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54a7f28a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <span className=\"navbar-brand mb-0 h1 p-2\">IndianCovidTracker</span>\r\n                </div>\r\n            </nav>\r\n            <h1 className=\"text-center my-3\">Covid Live Updates</h1>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst FetchData = (props) => {\r\n    return (\r\n        <>\r\n            <tbody>\r\n                <tr>\r\n                    <td style={{width:'20rem'}}>{props.lastUpdate}</td>\r\n                    <td>{props.state}</td>\r\n                    <td>{props.confirmed}</td>\r\n                    <td>{props.active}</td>\r\n                    <td>{props.recovered}</td>\r\n                    <td>{props.deaths}</td>\r\n                </tr>\r\n            </tbody>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FetchData;","import React, { useEffect, useState } from 'react';\r\nimport FetchData from './FetchData';\r\n\r\nconst CovidData = () => {\r\n    const [data,setData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const callApi= async ()=>{\r\n            const response = await fetch('https://api.covid19india.org/data.json');\r\n            const responsejson = await response.json();\r\n            setData(responsejson.statewise);\r\n            console.log(responsejson.statewise);\r\n        }\r\n        callApi();\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <table className=\"table table-striped\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">LastUpdatedTime</th>\r\n                            <th scope=\"col\">State</th>\r\n                            <th scope=\"col\">TotalCases</th>\r\n                            <th scope=\"col\">ActiveCases</th>\r\n                            <th scope=\"col\">RecoveredCases</th>\r\n                            <th scope=\"col\">Deaths</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                        data.map((value,index)=>{\r\n                           return <FetchData \r\n                                key={index}\r\n                                active={value.active}\r\n                                confirmed={value.confirmed}\r\n                                deaths={value.deaths}\r\n                                lastUpdate={value.lastupdatedtime}\r\n                                recovered={value.recovered}\r\n                                state={value.state}\r\n                           />\r\n                        })\r\n                    }\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CovidData;","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport CovidData from './Components/CovidData';\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <CovidData />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}